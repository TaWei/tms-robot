--    This material is the joint property of Fanuc Robotics Corporation and
--    FANUC LTD Japan, and must be returned to either Fanuc Robotics
--    Corporation or FANUC LTD Japan immediately upon request.  This material
--    and the information illustrated or contained herein may not be
--    reproduced, copied, used, or transmitted in whole or in part in any way
--    without the prior written consent of both Fanuc Robotics and FANUC.
--    
--    All Rights Reserved
--    Copyright (C) 2000
--    Fanuc Robotics Corporation
--    FANUC LTD Japan
--             Karel is a registered trademark of
--             Fanuc Robotics Corporation
--    +
--    Program: tcpserv3.kl - Program for TCP Messaging
--    
--    Description:
--    
--    This program serves as an example on how to use TCP messaging and write
--    a server Karel program.
--
--    Authors: Fanuc Robotics Corporation
--             3900 West Hamlin
--             Rochester Hills, MI 48309
--    
--    Modification history:
--
-------------------------------------------------------------------------------
PROGRAM tcpserv3
-- %STACKSIZE = 4000
-- %NOLOCKGROUP
-- %NOPAUSE=ERROR+COMMAND+TPENABLE
-- %ENVIRONMENT uif
-- %ENVIRONMENT sysdef
-- %ENVIRONMENT memo
-- %ENVIRONMENT kclop
-- %ENVIRONMENT bynam
-- %ENVIRONMENT fdev
-- %ENVIRONMENT flbt
-- %INCLUDE klevccdf
-- %INCLUDE klevkeys
-- %INCLUDE klevkmsk
-------------------------------------------------------------------------------
VAR
	file_var : FILE
	tmp_int  : INTEGER
	tmp_int1 : INTEGER
	tmp_str  : STRING[128]
	tmp_str1 : STRING[128]
	status, entry   : INTEGER
	length, I : INTEGER
	p1,p2 : XYZWPR
	c : CONFIG
	path1 : PATH
	longueur : INTEGER
	fichier1 : FILE
-------------------------------------------------------------------------------

BEGIN


	CNV_STR_CONF('NUT,0,0,0',c,0)
	SET_FILE_ATR(file_var, ATR_IA)
	-- set the server port before doing a connect
	SET_VAR(entry, '*SYSTEM*','$HOSTS_CFG[3].$SERVER_PORT',59002,status)
	--WRITE('Connecting..',cr)
	MSG_CONNECT('S3:',status) 
	--WRITE('Connect Status = ',status,cr)
	IF status = 0 THEN
	--
 -- Open S3:
	--WRITE ('Opening',cr)
	FOR tmp_int1 = 1 TO 2 DO
	 OPEN FILE file_var ('rw','S3:')
	 status = IO_STATUS(file_var)
	 --WRITE (status,cr)
	 IF status = 0 THEN
	    -- write an integer
	    FOR tmp_int = 1 TO 2 DO
	       WRITE('Reading',cr)
	       -- Read 10 bytes 
	       BYTES_AHEAD(file_var, entry, status)
	       --WRITE file_var ('hello')
	       --WRITE(entry, status, cr)
	       READ file_var (tmp_str::1)
	       tmp_str1 = 'l'
	       --status = IO_STATUS(file_var)
	       --WRITE (status, cr)
	       -- Write 10 bytes
	       --WRITE ('hello', cr)
	       --status = IO_STATUS(file_var)
	       --WRITE (status, cr)
	    ENDFOR
	    CLOSE FILE file_var
	 ENDIF
	ENDFOR
	--WRITE('Disconnecting..',cr)
	--MSG_DISCO('S3:',status)
	--WRITE('Done.',cr)
	IF tmp_str = 'l'
		THEN
			p1 = POS(475,-190,375,-180,-90,0,c)
			MOVE TO p1
		ELSE
			p2 = POS(499,121,480,180,-90,0,c)
			MOVE TO p2
	ENDIF

	ENDIF
END tcpserv3